[{"authors":["leogsouza"],"categories":null,"content":"I am a software developer expert building backend applications. I have strong knowledge building frontend applications and mobile applications. I\u0026rsquo;m looking for opportunities to build new things and learn new concepts and technologies to improve my career.\n","date":1609759140,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1609759140,"objectID":"894527350be5d616e7ee71ffa8b6f587","permalink":"https://leogsouza.github.io/authors/leogsouza/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/leogsouza/","section":"authors","summary":"I am a software developer expert building backend applications. I have strong knowledge building frontend applications and mobile applications. I\u0026rsquo;m looking for opportunities to build new things and learn new concepts and technologies to improve my career.","tags":null,"title":"","type":"authors"},{"authors":[""],"categories":null,"content":"A linked list is another linear data structure, like array, it stores elements in a linear way. However, unlike arrays, linked lists does not stores its elements at contiguous memory location. The elements are connected to each other using nodes. In another words, a linked list is a list of nodes where each node contains a data field and a reference (link) to the next node in the list.\nBecause of its form, this data structure allows add and remove elements eficiently from any position within the list during interation. But, the search cost more effort and often requires O(n) time to find an element.\nLet\u0026rsquo;s dive into some code e see how implement a Linked List in Go:\npackage main\r// Node represents a linked list's node\rtype Node struct {\rData int\rNext *Node\r}\r// NewNode creates a pointer to a new Node\rfunc NewNode(data int) *Node {\rnewNode := \u0026amp;Node{}\rnewNode.Data = data\rreturn newNode\r}\r// LinkedList is a linked list data structure\rtype LinkedList struct {\rHead *Node\r}\r// AddToHead adds a new node into linked list head\rfunc (ll *LinkedList) AddToHead(data int) {\rnewNode := NewNode(data)\rnewNode.Next = ll.Head\rll.Head = newNode\r}\r// AddAfter adds a new node after the given prevNode\rfunc (ll *LinkedList) AddAfter(prevNode *Node, data int) {\rif prevNode == nil {\rfmt.Println(\u0026quot;The given previous node cannot be null\u0026quot;)\r}\rnewNode := NewNode(data)\rnewNode.Next = prevNode.Next\rprevNode.Next = newNode\r}\r// AddToEnd adds a new node into do end of the linked list\rfunc (ll *LinkedList) AddToEnd(data int) {\rnewNode := NewNode(data)\rif ll.Head == nil {\rll.Head = newNode\rreturn\r}\rlast := ll.Head\rfor last.Next != nil {\rlast = last.Next\r}\rlast.Next = newNode\r}\r// DeleteNode deletes the first occurrence of a key in linked list\rfunc (ll *LinkedList) DeleteNode(key int) {\rtemp, prev := ll.Head, \u0026amp;Node{}\rif temp != nil \u0026amp;\u0026amp; temp.Data == key {\rll.Head = temp.Next\rreturn\r}\rfor temp != nil \u0026amp;\u0026amp; temp.Data != key {\rprev = temp\rtemp = temp.Next\r}\rif temp == nil {\rreturn\r}\rprev.Next = temp.Next\r}\r// DeleteAt deletes a node at specific position\rfunc (ll *LinkedList) DeleteAt(position int) {\rif ll.Head == nil {\rreturn\r}\rnode := ll.Head\rif position == 0 {\rll.Head = node.Next\r}\rfor i := 0; node != nil \u0026amp;\u0026amp; i \u0026lt; position-1; i++ {\rnode = node.Next\r}\rif node == nil || node.Next == nil {\rreturn\r}\rnext := node.Next.Next\rnode.Next = next\r}\r// DeleteList deletes the entire Linked List\rfunc (ll *LinkedList) DeleteList() {\rll.Head = nil\r}\r For the moment, that\u0026rsquo;s all.\nThanks for reading, see you in the next post.\n","date":1609759140,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609759140,"objectID":"1bf6dc19cbd8b739ad2515d2e303c926","permalink":"https://leogsouza.github.io/post/linked-list/","publishdate":"2021-01-04T11:19:00Z","relpermalink":"/post/linked-list/","section":"post","summary":"Learning about Linked Lists","tags":["Go","Data Structure"],"title":"Learning Data Structures - Linked List","type":"post"},{"authors":[""],"categories":null,"content":"Array is a data structure used to store a fix number of elements and these elements should be of the same type. In Go we create and use arrays as follows:\npackage main\rimport \u0026quot;fmt\u0026quot;\rfunc main() {\r// we are creating an array that should store 3 elements\rvar a [3]int\r// In Go, by default, an array is zero-value which means // that when is created an array of int type and it's not initialized, // all array positions are filled with 0s.\rfmt.Println(\u0026quot;array elements:\u0026quot;, a)\r// Set a value at specific index\ra[1] = 5\rfmt.Println(\u0026quot;array element set:\u0026quot;, a)\rfmt.Println(\u0026quot;array at index 1:\u0026quot;, a[1])\r// length of array\rfmt.Println(\u0026quot;array length: \u0026quot;, len(a))\r// traversing the array\rfmt.Println(\u0026quot;Traversing array: \u0026quot;)\rfor i := 0; i \u0026lt; len(a); i++ {\rfmt.Print(a[i], \u0026quot; \u0026quot;)\r}\r}\r This is a short explanation about arrays. Next time, I\u0026rsquo;ll discuss about Linked List.\nThanks a lot.\n","date":1608807720,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1608807720,"objectID":"3b519da100d778c4d0e1260e0f06f23f","permalink":"https://leogsouza.github.io/post/array/","publishdate":"2020-12-24T11:02:00Z","relpermalink":"/post/array/","section":"post","summary":"Getting started with Arrays","tags":["Go","Data Structure"],"title":"Learning Data Structures - Arrays","type":"post"},{"authors":[""],"categories":null,"content":"I have over 15 years of experience working as a Software Developer and my biggest frustration it\u0026rsquo;s that I don\u0026rsquo;t have enough knowledge about Data Structures and Algorithms (DSA). So, to fix this, I decided (again) to start from beginning and study DSA improve my knowledge and feel better with myself. To help me to improve my knowledge I will write about every step that I will advance in this journey and share some material I will use to acomplish this goal.\n","date":1607040000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607040000,"objectID":"fad1c55666049911820f89b1416af792","permalink":"https://leogsouza.github.io/post/learning-data-structure/","publishdate":"2020-12-04T00:00:00Z","relpermalink":"/post/learning-data-structure/","section":"post","summary":"My journey to finally learn DSA","tags":null,"title":"Learning Data Structures and Algorithms(AGAIN)","type":"post"},{"authors":[""],"categories":null,"content":"Hi Everyone, when we are learning a new programming language it\u0026rsquo;s common starting with the classic \u0026ldquo;Hello, World\u0026rdquo; program. So this is what we\u0026rsquo;ll do now in Go.\nFor this tutorial I\u0026rsquo;ll consider that you have go installed in your machine. If you don\u0026rsquo;t have go installed in your machine please access the Go documentation and follow the steps into installation section.\nWriting your code Start creating a folder hello in your computer and inside of it create a new file called main.go. Next, add this content to main.go file\npackage main\rimport \u0026quot;fmt\u0026quot;\rfunc main() {\rfmt.Println(\u0026quot;Hello, World\u0026quot;)\r}\r Let\u0026rsquo;s look through the code and understand the code.\nIn the first line we have the package declaration\npackage main\r Every go program is made up of packages and the program start running in package main.\nIn the next line we are using a package inside our program.\nimport \u0026quot;fmt\u0026quot;\r In our case we are using the package \u0026ldquo;fmt\u0026rdquo; to use a function to print a message on the screen.\nFollowing the code we have the function main\nfunc main() {\rfmt.Println(\u0026quot;Hello, World\u0026quot;)\r}\r Every Go program has one and only one function main and inside of it you put what your program have to do. In this piece of code we are just calling the function Println from the fmt package and passing \u0026ldquo;Hello World\u0026rdquo; as argument. The function Println from \u0026ldquo;fmt\u0026rdquo; package just print the message passed as argument and appends a new line.\nExecuting the program To execute a go program you have to use the Go command to compile and run the program. Inside the folder that you created the main.go, run the command like this:\n$ go run main.go\r\u0026quot;Hello, World\u0026quot;\r For the moment, that\u0026rsquo;s all.\nThanks for reading, see you in the next post.\n","date":1588896000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588896000,"objectID":"ccc9de38b39556840eaf2ce1e66f72fa","permalink":"https://leogsouza.github.io/post/your-first-program-in-go/","publishdate":"2020-05-08T00:00:00Z","relpermalink":"/post/your-first-program-in-go/","section":"post","summary":"Hi Everyone, when we are learning a new programming language it\u0026rsquo;s common starting with the classic \u0026ldquo;Hello, World\u0026rdquo; program. So this is what we\u0026rsquo;ll do now in Go.\nFor this tutorial I\u0026rsquo;ll consider that you have go installed in your machine. If you don\u0026rsquo;t have go installed in your machine please access the Go documentation and follow the steps into installation section.\nWriting your code Start creating a folder hello in your computer and inside of it create a new file called main.","tags":["Go","Beginner"],"title":"Your first program in Go (Golang)","type":"post"},{"authors":[""],"categories":null,"content":"Hello Everyone, my name is Leonardo Souza and at the beginning of this year I decided to change my old website and create a blog to writing about anything that I wanted.\nWho am I? I am a self-taught Brazilian Software Developer that enjoys learning new things and sharing what I learn. I have over 14 years working in a variety of technologies and I am specialized in Backend and API Development a variety of technologies. I also have good experience with Frontend and a little bit with Mobile. When I am not coding, I usually spare my time with my family.\nWhy did I create this blog? Well, some reasons encouraged me to create this blog:\n I am studying English and I need to improve my skills to become fluent. So, I see that writing is a good way to improve them. I want to boost my coding skills and increase my knowledge in software development. And for me, writing could allow me to understand and explain with more details a specific subject and then master it (applying Feynman Technique). I also want to share my personal experiences that could be useful for anyone who\u0026rsquo;s living a similar situation.  Conclusion So, this is my first post and I know that maybe I made some mistakes but I\u0026rsquo;ll improve my writing skills as I write more and certainly give more interesting subjects.\nFeel free to reach out with your thoughts.\nThank you!!\n","date":1578182400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578182400,"objectID":"3f289ad9deff50f67a8232b628d934fb","permalink":"https://leogsouza.github.io/post/hello-world/","publishdate":"2020-01-05T00:00:00Z","relpermalink":"/post/hello-world/","section":"post","summary":"Hello Everyone, my name is Leonardo Souza and at the beginning of this year I decided to change my old website and create a blog to writing about anything that I wanted.\nWho am I? I am a self-taught Brazilian Software Developer that enjoys learning new things and sharing what I learn. I have over 14 years working in a variety of technologies and I am specialized in Backend and API Development a variety of technologies.","tags":null,"title":"Hello World, hello 2020","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://leogsouza.github.io/about/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/about/","section":"","summary":"","tags":null,"title":"","type":"widget_page"}]